{"version":3,"sources":["components/Todo.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","className","style","textDecoration","todo","isCompleted","text","onClick","completeTodo","id","removeTodo","TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","target","reset","type","name","placeholder","onChange","Main","todos","setTodos","newTodos","splice","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAoBeA,EAlBF,SAACC,GACV,OACI,sBAAKC,UAAU,YAAf,UACI,oBACIA,UAAU,OACVC,MAAO,CAAEC,eAAgBH,EAAMI,KAAKC,YAAc,eAAiB,IAFvE,SAIKL,EAAMI,KAAKE,OAEhB,sBAAKL,UAAU,YAAf,UACI,wBAAQA,UAAU,MAAMM,QAAS,kBAAMP,EAAMQ,aAAaR,EAAMS,KAAhE,oBACA,wBAAQR,UAAU,MAAMM,QAAS,kBAAMP,EAAMU,WAAWV,EAAMS,KAA9D,sBCTVE,EAAW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACJC,mBAAS,IADL,mBACvBC,EADuB,KAChBC,EADgB,KAW9B,OACI,uBAAMd,UAAU,YAAYe,SATX,SAAAC,GACjBA,EAAEC,iBACGJ,IACLF,EAAQE,GACRC,EAAS,IACTE,EAAEE,OAAOC,UAIT,UACI,uBACIC,KAAK,OACLC,KAAK,OACLC,YAAY,gBACZC,SAAU,SAAAP,GAAC,OAAIF,EAASE,EAAEE,OAAOL,UAErC,uBAAOO,KAAK,SAASP,MAAM,eAyDxBW,EAjDF,WAAO,IAAD,EAEWZ,mBAAS,IAFpB,mBAERa,EAFQ,KAEDC,EAFC,OAKSd,mBAAS,IALlB,mBAYTL,GAZS,UAYM,SAAAC,GACjB,IAAMmB,EAAQ,YAAOF,GACrBE,EAASnB,GAAIJ,aAAc,EAC3BsB,EAASC,KAGPlB,EAAa,SAAAD,GACf,IAAMmB,EAAQ,YAAOF,GACrBE,EAASC,OAAOpB,EAAI,GACpBkB,EAASC,IAIb,OACI,sBAAK3B,UAAU,OAAf,UACI,2CAEA,cAAC,EAAD,CAAUW,QAtBF,SAAAN,GACZ,IAAMsB,EAAQ,sBAAOF,GAAP,CAAc,CAAEpB,UAC9BqB,EAASC,MAsBL,qBAAK3B,UAAU,YAAf,SACI,6BACKyB,EAAMI,KAAI,SAAC1B,EAAMK,GAAP,OACP,cAAC,EAAD,CAEIA,GAAIA,EACJL,KAAMA,EACNI,aAAcA,EACdE,WAAYA,GAJPD,cCvDlBsB,MARf,WACE,OACE,qBAAK9B,UAAU,MAAf,SACE,cAAC,EAAD,OCMS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6c56b667.chunk.js","sourcesContent":["import React from 'react'\n\nconst Todo = (props) => {\n    return (\n        <div className=\"todo-elem\">\n            <li\n                className=\"todo\"\n                style={{ textDecoration: props.todo.isCompleted ? \"line-through\" : \"\" }}\n            >\n                {props.todo.text}\n            </li>\n            <div className=\"todo-btns\">\n                <button className=\"btn\" onClick={() => props.completeTodo(props.id)}>&#10003;</button>\n                <button className=\"btn\" onClick={() => props.removeTodo(props.id)}>x</button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Todo\n","import React, { useState } from 'react'\nimport Todo from './Todo'\n\n\nconst TodoForm = ({ addTodo }) => {\n    const [value, setValue] = useState(\"\");\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (!value) return;\n        addTodo(value);\n        setValue(\"\");\n        e.target.reset();\n    };\n\n    return (\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                name=\"todo\"\n                placeholder=\"Add your ToDo\"\n                onChange={e => setValue(e.target.value)} />\n\n            <input type=\"submit\" value=\"Submit\" />\n        </form>\n    )\n\n\n}\n\n\nconst Main = () => {\n\n    const [todos, setTodos] = useState([\n\n    ])\n    const [todo, setTodo] = useState(\"\")\n\n    const addTodo = text => {\n        const newTodos = [...todos, { text }];\n        setTodos(newTodos)\n    }\n\n    const completeTodo = id => {\n        const newTodos = [...todos];\n        newTodos[id].isCompleted = true;\n        setTodos(newTodos);\n    }\n\n    const removeTodo = id => {\n        const newTodos = [...todos];\n        newTodos.splice(id, 1);\n        setTodos(newTodos);\n    }\n\n\n    return (\n        <div className=\"main\">\n            <h1>ToDo List</h1>\n\n            <TodoForm addTodo={addTodo} />\n\n            <div className=\"todo-list\">\n                <ol>\n                    {todos.map((todo, id) => (\n                        <Todo\n                            key={id}\n                            id={id}\n                            todo={todo}\n                            completeTodo={completeTodo}\n                            removeTodo={removeTodo}\n                        />\n                    ))}\n                </ol>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Main\n","import './App.css';\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}